#soap $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.
if '[ -n $XDG_CURRENT_DESKTOP ]' 'set -g status-fg black'
if '[ -n $XDG_CURRENT_DESKTOP ]' 'set -g status-bg yellow'
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Set the terminals to be 1-indexed
set -g base-index 0

# Set the prefix to ^A.
unbind C-b
set -g prefix ^Q
bind q send-prefix

# copy to system using C
bind-key C run-shell "tmux show-buffer | xsel -i -b"

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c 
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w 
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \ 
#unbind \
#bind \ confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split 
unbind |
unbind %
bind | split-window -h
bind - split-window -v

#unbind ^_
#bind ^_ split-window -h

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# some copy paste 
# move x clipboard into tmux paste abuffer
bind C-p run "xclip -o | tmux load-buffer -"
# move tmux copy buffer into x clipboard
bind C-y run "tmux save-buffer - | xclip -i -selection clipboard"

# select in vi mode
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
set-window-option -g mode-keys vi

# enable mouse
#set-option -g mouse-select-pane on
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# enable mouse selection in copy mode
#setw -g mode-mouse on
#set-window-option -g mode-mouse on

# Reduce tmux delay for more responsiveness
set -sg escape-time 1

# quick view of processes
#bind-key "~" split-window -h "exec htop"


# function keys

unbind -n F5
unbind -n F6
unbind -n F7
unbind -n F8
unbind -n F9
unbind -n F10
unbind -n F11
bind-key F5 split-window -h
bind-key F6 split-window -v
bind-key F7 kill-pane
bind-key F8 select-pane -t :.+

bind-key F9 command-prompt "rename-window %%"
bind-key F10 new-window
bind-key F11 kill-window
bind-key F12 select-window -t :+

# scrolling with terminal scroll bar
set -g terminal-overrides 'xterm*:smcup@:rmcup@'


# Ctrl-Left/Right cycles thru windows (no prefix)
bind-key -n "C-Left"  select-window -t :-
bind-key -n "C-Right" select-window -t :+

bind R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded!"
 
bind / command-prompt -p "man" "split-window -h 'man %%'"
bind S command-prompt -p "ssh" "new-window -n %1 'exec ssh %1'"
bind h split-window -h  "man tmux"

# Window status colors
# default statusbar colors
#set -g status-fg yellow
#set -g status-bg black
#set -g status-style bright

# default window title colors
#set-window-option -g window-status-style fg=black
#set-window-option -g window-status-style bg=yellow
#set-window-option -g window-status-style dim
#
## active window title colors
#set-window-option -g window-status-current-style fg=white
#set-window-option -g window-status-current-style bg=default
#set-window-option -g window-status-current-style bright
#
## Highlight active window
set-window-option -g window-status-current-style bg=magenta
set-window-option -g window-status-current-style fg=black
